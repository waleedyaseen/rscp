package me.waliedyassen.rsconfig

import me.waliedyassen.rsconfig.parser.Diagnostic
import me.waliedyassen.rsconfig.parser.DiagnosticKind
import me.waliedyassen.rsconfig.parser.Span
import me.waliedyassen.rsconfig.symbol.SymbolTable

/**
 * Provides all the stuff necessary to run the parser.
 */
data class CompilerContext(val sym: SymbolTable) {

    /**
     * A list of all the diagnostics generated by the compiler so far.
     */
    val diagnostics = mutableListOf<Diagnostic>()

    /**
     * Add an error diagnostic to the generated diagnostic list.
     */
    fun addError(span: Span, message: String) {
        addDiagnostic(DiagnosticKind.Error, span, message)
    }

    /**
     * Add a diagnostic to the generated diagnostics list.
     */
    private fun addDiagnostic(kind: DiagnosticKind, span: Span, message: String) {
        diagnostics += Diagnostic(kind, span, message)
    }
}